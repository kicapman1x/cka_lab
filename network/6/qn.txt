Create a Deployment named hello using the image
nginxdemos/hello:plain-text with the kubectl command line.
Expose the Deployment to create a ClusterIP Service named hello-svc
that can communicate over port 80 using the kubectl command line. Use
the correct kubectl command to verify that itâ€™s a ClusterIP Service with the
correct port exposed.
Change the hello-svc Service created in the previous exercise to a
NodePort Service, where the NodePort should be 30000. Be sure to edit the
Service in place, without creating a new YAML or issuing a new imperative
command. Communicate with the Pods within the hello Deployment via the
NodePort Service using curl.
Install an Ingress controller in the cluster using the command k apply -f
https://
raw.githubusercontent.com/chadmcrowell/acing-the-cka-
exam/main/ch_06/ nginx-ingress-controller.yaml. Change
the hello-svc Service back to a ClusterIP Service and create an Ingress
resource that will route to the hello-svc Service when a client requests
hello.com.
Create a new kind cluster without a CNI. Install the bridge CNI, followed by
the Calico CNI. After installing the CNI, verify that the CoreDNS Pods are up
and running and the nodes are in a ready state.